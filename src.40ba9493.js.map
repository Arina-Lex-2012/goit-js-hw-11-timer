{"version":3,"sources":["index.js"],"names":["refs","clockface","document","getElementById","a","body","querySelectorAll","updateClockface","days","hours","mins","secs","console","log","forEach","element","Date","now","timer","selector","targetDate","start","setInterval","currentTime","getTimeComponents","pad","value","String","padStart","time","Math","floor"],"mappings":";;;AAoEA,aApEA,QAAA,oBAEA,IAAMA,EAAO,CACVC,UAAWC,SAASC,eAAe,WACnCC,EAAGF,SAASG,KAAKC,iBAAiB,iBAG/BF,EAAIF,SAASG,KAAKC,iBAAiB,gBAIzC,SAASC,EAA6C,GAA3BC,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC1CX,EAAKI,EAAOI,GAAAA,OAAAA,EAAUC,OAAAA,OAAAA,EAAWC,OAAAA,OAAAA,EAAUC,OAAAA,OAAAA,GAJ/CC,QAAQC,IAAIT,EAAEU,QAAQ,SAAAC,GAAWH,OAAAA,QAAQC,IAAIE,MAC7CH,QAAQC,IAAIb,EAAKI,EAAEU,QAAQ,SAAAC,GAAWH,OAAAA,QAAQC,IAAIE,MAMlDR,EAAgBS,KAAKC,OAErB,IAAMC,EAAQ,CACVC,SAAU,WACVC,WAAY,IAAIJ,KAAK,gBAErBK,MAAQ,WAAA,IAAA,EAAA,KAGJC,YAAY,WACFC,IAAAA,EAAcP,KAAKC,MAEWO,EAAAA,EADlB,EAAKJ,WAAaG,GAC5Bf,EAAAA,KAAMC,EAAAA,MAAOC,EAAAA,KAAMC,EAAAA,MAE5B,OAMX,SAASc,EAAIC,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGrC,SAASJ,EAAkBK,GAMhB,MAAA,CAAErB,KALIiB,EAAIK,KAAKC,MAAMF,EAAQ,QAKrBpB,MAJDgB,EAAIK,KAAKC,MAAOF,EAAQ,MAAyB,OAIzCnB,KAHTe,EAAIK,KAAKC,MAAOF,EAAQ,KAAoB,MAG7BlB,KAFfc,EAAIK,KAAKC,MAAOF,EAAQ,IAAc,OAVvDX,EAAMG","file":"src.40ba9493.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n   clockface: document.getElementById('timer-1'),\n   a: document.body.querySelectorAll('[data-value]'),\n};\n\nconst a = document.body.querySelectorAll('[data-value]');\nconsole.log(a.forEach(element => console.log(element)));\nconsole.log(refs.a.forEach(element => console.log(element)));\n\nfunction updateClockface({ days, hours, mins, secs }) {\n    refs.a = `${days} : ${hours} : ${mins} : ${secs}`;\n};\n\nupdateClockface(Date.now());\n\nconst timer = {\n    selector: '#timer-1',\n    targetDate: new Date('Sep 01, 2021'),\n\n    start() {\n        // const startTime = Date.now();\n\n        setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            const { days, hours, mins, secs } = getTimeComponents(deltaTime);            \n            // console.log(`${days} : ${hours} : ${mins} : ${secs}`);\n        }, 1000)\n    },\n};\n\ntimer.start();\n\nfunction pad(value){\n    return String(value).padStart(2, '0');\n};\n\nfunction getTimeComponents(time){\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n    \n    return { days, hours, mins, secs};\n};\n\n\n\n\n\n\n\n// const days = Math.floor(time / (1000 * 60 * 60 * 24));\n\n// const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\n// const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n\n// const secs = Math.floor((time % (1000 * 60)) / 1000);\n\n// 1 января 1970 00:00, миллисекунды\n\n\n// new CountdownTimer({\n//     selector: '#timer-1',\n//     targetDate: new Date('Jul 17, 2019'),\n//   });"]}