{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","timer","selector","targetDate","Date","start","setInterval","currentTime","now","getTimeComponents","pad","value","String","padStart","time","Math","floor","textContent"],"mappings":";;;AAiEA,aAjEA,QAAA,oBAEA,IAAMA,EAAO,CAEVC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAQ1BI,EAAQ,CACVC,SAAU,WACVC,WAAY,IAAIC,KAAK,gBAErBC,MAAQ,WAAA,IAAA,EAAA,KACJC,YAAY,WACFC,IAAAA,EAAcH,KAAKI,MAIzBC,EAHkB,EAAKN,WAAaI,IAKrC,KAYX,SAASG,EAAIC,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAIrC,SAASJ,EAAkBK,GACjBnB,IAAAA,EAAOe,EAAIK,KAAKC,MAAMF,EAAQ,QAC9BhB,EAAQY,EAAIK,KAAKC,MAAOF,EAAQ,MAAyB,OACzDf,EAAOW,EAAIK,KAAKC,MAAOF,EAAQ,KAAoB,MACnDd,EAAOU,EAAIK,KAAKC,MAAOF,EAAQ,IAAc,MAEnDpB,EAAKC,KAAKsB,YAActB,EACxBD,EAAKI,MAAMmB,YAAcnB,EACzBJ,EAAKK,KAAKkB,YAAclB,EACxBL,EAAKM,KAAKiB,YAAcjB,EAtB5BC,EAAMI,QAKNI","file":"src.2b638885.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n//    clockface: document.getElementById('timer-1'),\n   days: document.querySelector('[data-value=\"days\"]'),\n   hours: document.querySelector('[data-value=\"hours\"]'),\n   mins: document.querySelector('[data-value=\"mins\"]'),\n   secs: document.querySelector('[data-value=\"secs\"]'),\n};\n\n// console.log(refs.days.textContent);\n// console.log(refs.hours.textContent);\n// console.log(refs.mins.textContent);\n// console.log(refs.secs.textContent);\n\nconst timer = {\n    selector: '#timer-1',\n    targetDate: new Date('Sep 01, 2021'),\n\n    start() {\n        setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            // const { days, hours, mins, secs } = getTimeComponents(deltaTime);            \n            // console.log(`${days} : ${hours} : ${mins} : ${secs}`);\n            getTimeComponents(deltaTime); \n            // console.log(time);\n        }, 0);\n    },\n};\n\ntimer.start(); \n\n// function updateClockface({ days, hours, mins, secs }) {\n    // refs.a = `${days} : ${hours} : ${mins} : ${secs}`;\n\ngetTimeComponents();\n\n// добавляет ноль перед одноцифровым значением времени\nfunction pad(value){\n    return String(value).padStart(2, '0');\n};\n\n// преобразует милисекунды в дни, часы, минуты, секунды\nfunction getTimeComponents(time){\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    refs.days.textContent = days;\n    refs.hours.textContent = hours;\n    refs.mins.textContent = mins;\n    refs.secs.textContent = secs;    \n    // return { days, hours, mins, secs};\n};\n\n\n\n// 1 января 1970 00:00, милисекунды\n\n\n// new CountdownTimer({\n//     selector: '#timer-1',\n//     targetDate: new Date('Jul 17, 2019'),\n//   });"]}